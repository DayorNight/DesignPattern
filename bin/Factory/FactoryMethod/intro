工厂方法模式 
又称工厂模式、多态工厂模式和虚拟构造器模式，通过定义工厂父类负责定义创建对象的公共接口，而子类则负责生成具体的对象。
一种常用的对象创建型设计模式,此模式的核心精神是封装 类中不变的部分，
工厂方法模式是简单工厂模式的衍生，解决了许多简单工厂模式的问题。首先完全实现‘开－闭 原则’，实现了可扩展。
作用：将类的实例化（具体产品的创建）延迟到工厂类的子类（具体工厂）中完成，即由子类来决定应该实例化（创建）哪一个类。
主要角色：
抽象工厂：描述具体工厂的公共接口
具体工厂：描述具体工厂，创建产品的实例，供外界调用
抽象产品：负责描述产品的公共接口
具体产品：描述生产的具体产品。

举个简单易懂的例子：
“假设”有各类的饮料机（抽象工厂），可以调出各种的饮料（抽象产品）。但是一类饮料机（具体工厂），只能生产一种饮料（具体产品）。
如果你需要喝可乐，就需要买可乐饮料机。

根据例子可以描述为：一个抽象产品类，可以派生出多个具体产品类。一个抽象工厂类，可以派生出多个具体工厂类。每个具体工厂类只能创建一个具体产品类的实例。

优点：
符合开-闭原则：新增一种产品时，只需要增加相应的具体产品类和相应的工厂子类即可
符合单一职责原则：每个具体工厂类只负责创建对应的产品

缺点：
增加了系统的复杂度：类的个数将成对增加
增加了系统的抽象性和理解难度
一个具体工厂只能创建一种具体产品



https://www.jianshu.com/p/d0c444275827